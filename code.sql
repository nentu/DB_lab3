/*
1)

Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_СЕССИЯ.ИД.
Фильтры (AND):
a) Н_ЛЮДИ.ОТЧЕСТВО > Георгиевич.
b) Н_СЕССИЯ.ДАТА < 2002-01-04.
Вид соединения: LEFT JOIN.
*/
SELECT
	Н_ЛЮДИ.ИМЯ, Н_СЕССИЯ.ИД
FROM
	Н_ЛЮДИ
		LEFT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
WHERE
	Н_ЛЮДИ.ОТЧЕСТВО > 'Георгиевич' AND
	Н_СЕССИЯ.ДАТА < to_timestamp('04-01-2002', 'dd-mm-yyyy');
/*
2

Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.ДАТА.
Фильтры (AND):
a) Н_ЛЮДИ.ИД = 100012.
b) Н_ВЕДОМОСТИ.ЧЛВК_ИД < 163249.
c) Н_СЕССИЯ.ИД < 14369.
Вид соединения: RIGHT JOIN.
*/
SELECT
	Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ЧЛВК_ИД, Н_СЕССИЯ.ДАТА
FROM
	Н_ЛЮДИ
		RIGHT JOIN Н_СЕССИЯ ON Н_ЛЮДИ.ИД = Н_СЕССИЯ.ЧЛВК_ИД
		RIGHT JOIN Н_ВЕДОМОСТИ ON Н_ЛЮДИ.ИД = Н_ВЕДОМОСТИ.ЧЛВК_ИД
WHERE
	Н_ЛЮДИ.ИД = 100012 AND
	Н_ВЕДОМОСТИ.ЧЛВК_ИД < 163249 AND
	Н_СЕССИЯ.ИД < 14369;

/*
3

Вывести число дней без учета повторений.
При составлении запроса нельзя использовать DISTINCT.
*/
SELECT
	sum(count)
FROM
	(SELECT COUNT(Н_СЕССИЯ.ДАТА) FROM Н_СЕССИЯ GROUP BY Н_СЕССИЯ.ДАТА) AS tab;
	
/*
4

В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) более 2 групп на кафедре вычислительной техники.
Для реализации использовать соединение таблиц.
*/
SELECT
	DISTINCT Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД
FROM 
	Н_ГРУППЫ_ПЛАНОВ LEFT JOIN Н_ПЛАНЫ ON Н_ГРУППЫ_ПЛАНОВ.ПЛАН_ИД = Н_ПЛАНЫ.ИД
	LEFT JOIN Н_ОТДЕЛЫ ON Н_ПЛАНЫ.ОТД_ИД_ЗАКРЕПЛЕН_ЗА = Н_ОТДЕЛЫ.ИД
	RIGHT JOIN (SELECT
					ПЛАН_ИД
					FROM
						(SELECT DISTINCT ГРУППА, ПЛАН_ИД FROM Н_УЧЕНИКИ) AS ГРУППЫ --ТОЛЬКО ГРУППЫ И ПЛАНЫ
					GROUP BY ПЛАН_ИД
					HAVING count(ГРУППА)>2) AS ПЛАНЫ_ГРУПП
			ON ПЛАНЫ_ГРУПП.ПЛАН_ИД = Н_ПЛАНЫ.ИД
WHERE Н_ОТДЕЛЫ.ИМЯ_В_ИМИН_ПАДЕЖЕ = 'кафедра вычислительной техники';


/*
5

Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка не больше средней оценк(е|и) в группе 1101.

*/
WITH СРЕД_ОЦЕНКИ AS 
	(SELECT
		Н_ВЕДОМОСТИ.ЧЛВК_ИД, avg(Н_ОЦЕНКИ.СОРТ)
	FROM
		Н_ВЕДОМОСТИ LEFT JOIN Н_ОЦЕНКИ ON Н_ВЕДОМОСТИ.ОЦЕНКА = Н_ОЦЕНКИ.КОД
	WHERE
		Н_ОЦЕНКИ.СОРТ<5
	GROUP BY
		Н_ВЕДОМОСТИ.ЧЛВК_ИД) --ИД ЛЮДЕЙ И СРЕДНИЕ ОЦЕНКИ
		
SELECT Н_ЛЮДИ.ИД, Н_ЛЮДИ.ФИО, СРЕД_ОЦЕНКИ.avg FROM --Н_ЛЮДИ.ФАМИЛИЯ,Н_ЛЮДИ.ИМЯ,Н_ЛЮДИ.ОТЧЕСТВО,
	СРЕД_ОЦЕНКИ
	LEFT JOIN Н_УЧЕНИКИ ON СРЕД_ОЦЕНКИ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
	LEFT JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '4100' AND
СРЕД_ОЦЕНКИ.avg <= (SELECT avg(СРЕД_ОЦЕНКИ.avg) FROM 
	СРЕД_ОЦЕНКИ
	LEFT JOIN Н_УЧЕНИКИ ON СРЕД_ОЦЕНКИ.ЧЛВК_ИД = Н_УЧЕНИКИ.ЧЛВК_ИД
WHERE Н_УЧЕНИКИ.ГРУППА = '1101'
GROUP BY Н_УЧЕНИКИ.ГРУППА); --средняя оценка в 1101 = 2.48;


/*
6

Получить список студентов, отчисленных до первого сентября 2012 года с очной или заочной формы обучения (специальность: 230101). В результат включить:
номер группы;
номер, фамилию, имя и отчество студента;
номер пункта приказа;
Для реализации использовать подзапрос с IN.
*/

SELECT
	Н_УЧЕНИКИ.ГРУППА,
	Н_ЛЮДИ.ФАМИЛИЯ,
	Н_ЛЮДИ.ИМЯ,
	Н_ЛЮДИ.ОТЧЕСТВО,
	Н_УЧЕНИКИ.П_ПРКОК_ИД
FROM
	Н_УЧЕНИКИ INNER JOIN Н_ЛЮДИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE
	Н_УЧЕНИКИ.ПРИЗНАК = 'отчисл' AND
	Н_УЧЕНИКИ.ВИД_ОБУЧ_ИД IN (
		SELECT
			Н_ФОРМЫ_ОБУЧЕНИЯ.ИД
		FROM
			Н_ФОРМЫ_ОБУЧЕНИЯ
		WHERE
			Н_ФОРМЫ_ОБУЧЕНИЯ.НАИМЕНОВАНИЕ IN ('Очная', 'Заочная')
	) AND
	Н_УЧЕНИКИ.КОНЕЦ < to_timestamp('01-08-2011', 'dd-mm-yyyy') AND
	Н_УЧЕНИКИ.ПЛАН_ИД = (
		SELECT
			Н_ПЛАНЫ.ИД
		FROM
			Н_ПЛАНЫ
		WHERE Н_ПЛАНЫ.НАПС_ИД = (
				SELECT
					Н_НАПР_СПЕЦ.ИД
				FROM
					Н_НАПР_СПЕЦ
				WHERE
					Н_НАПР_СПЕЦ.КОД_НАПРСПЕЦ = '230101'
		)
	);


/*
7

Вывести список студентов, имеющих одинаковые фамилии, но не совпадающие даты рождения.
*/

SELECT
	DISTINCT Н_ЛЮДИ.ФАМИЛИЯ, Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ
FROM
	Н_ЛЮДИ INNER JOIN Н_УЧЕНИКИ ON Н_УЧЕНИКИ.ЧЛВК_ИД = Н_ЛЮДИ.ИД
WHERE
	Н_ЛЮДИ.ФАМИЛИЯ = (SELECT
				Н_ЛЮДИ.ФАМИЛИЯ
		FROM
				Н_ЛЮДИ
		GROUP BY
				Н_ЛЮДИ.ФАМИЛИЯ
		ORDER BY
				count(Н_ЛЮДИ.ДАТА_РОЖДЕНИЯ) DESC
		LIMIT 1); 										--Самая популярная фамилия
